name: CI

on:
  push:
    branches:
      - "**"
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -r requirements-dev.txt

      - name: Run tests
        run: pytest

  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.18"
          cache: npm
          cache-dependency-path: apps/frontend/package-lock.json

      - name: Install dependencies
        run: npm install --include=dev
        working-directory: apps/frontend
        env:
          NODE_ENV: development

      - name: Build frontend
        run: npm run build
        working-directory: apps/frontend
        env:
          NODE_ENV: development

  build:
    needs:
      - test
      - frontend
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - name: backend
            dockerfile: Dockerfile
            image: ghcr.io/osadchii/lang-agent-backend
          - name: frontend
            dockerfile: Dockerfile.frontend
            image: ghcr.io/osadchii/lang-agent-frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: osadchii
          password: ${{ secrets.REGISTRY_SECRET }}

      - name: Build and push ${{ matrix.name }} image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./${{ matrix.dockerfile }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ matrix.image }}:latest
            ${{ matrix.image }}:${{ github.sha }}
          cache-from: type=gha,scope=${{ matrix.name }}
          cache-to: type=gha,scope=${{ matrix.name }},mode=max
