services:
  backend:
    image: ghcr.io/osadchii/lang-agent-backend:latest
    env_file:
      - .env
    environment:
      DB_DRIVER: ${DB_DRIVER:-postgresql+asyncpg}
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-lang_agent}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "8000:8000"
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - web
      - backend

  frontend:
    image: ghcr.io/osadchii/lang-agent-frontend:latest
    ports:
      - "4173:80"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lang-agent.rule=Host(`${TRAEFIK_HOST}`) && PathPrefix(`/`)"
      - "traefik.http.routers.lang-agent.entrypoints=websecure"
      - "traefik.http.routers.lang-agent.tls.certresolver=myresolver"
      - "traefik.http.services.lang-agent.loadbalancer.server.port=80"
    networks:
      - web

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${DB_NAME:-lang_agent}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - backend

networks:
  web:
    external: true
  backend:
    driver: bridge

volumes:
  postgres_data:
